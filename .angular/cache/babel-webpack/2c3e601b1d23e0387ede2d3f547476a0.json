{"ast":null,"code":"import { LOCALE_ID } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Order } from 'src/app/shared/orders.model';\nimport { endOfDay, addMonths } from 'date-fns';\nimport { startOfPeriod, endOfPeriod, addPeriod, subPeriod, SchedulerDateFormatter, CalendarSchedulerViewComponent } from 'angular-calendar-scheduler';\nimport { CalendarView, CalendarDateFormatter } from 'angular-calendar';\nimport * as CartActions from 'src/app/cart.actions';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"src/app/shared/orders.service\";\nimport * as i3 from \"src/app/timetable/timetable-forms/app.services\";\nimport * as i4 from \"angular-calendar\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"angular-calendar-scheduler\";\nconst _c0 = [\"MoveService\"];\nconst _c1 = [\"NewService\"];\n\nfunction TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"calendar-scheduler-view\", 22);\n    i0.ɵɵlistener(\"viewDaysChanged\", function TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template_calendar_scheduler_view_viewDaysChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.viewDaysChanged($event);\n    })(\"dayHeaderClicked\", function TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template_calendar_scheduler_view_dayHeaderClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.dayHeaderClicked($event.day);\n    })(\"hourClicked\", function TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template_calendar_scheduler_view_hourClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.hourClicked($event.hour);\n    })(\"segmentClicked\", function TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template_calendar_scheduler_view_segmentClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.segmentClicked(\"Clicked\", $event.segment);\n    })(\"eventClicked\", function TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template_calendar_scheduler_view_eventClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.eventClicked(\"Clicked\", $event.event);\n    })(\"eventTimesChanged\", function TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template_calendar_scheduler_view_eventTimesChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.eventTimesChanged($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"viewDays\", ctx_r6.viewDays)(\"viewDate\", ctx_r6.viewDate)(\"events\", ctx_r6.events)(\"locale\", ctx_r6.locale)(\"responsive\", false)(\"weekStartsOn\", ctx_r6.weekStartsOn)(\"excludeDays\", ctx_r6.excludeDays)(\"startsWithToday\", ctx_r6.startsWithToday)(\"hourSegments\", ctx_r6.hourSegments)(\"dayStartHour\", ctx_r6.dayStartHour)(\"dayEndHour\", ctx_r6.dayEndHour)(\"dayModifier\", ctx_r6.dayModifier)(\"hourModifier\", ctx_r6.hourModifier)(\"segmentModifier\", ctx_r6.segmentModifier)(\"eventModifier\", ctx_r6.eventModifier)(\"showEventActions\", true)(\"showSegmentHour\", true)(\"zoomEventOnHover\", true)(\"refresh\", ctx_r6.refresh);\n  }\n}\n\nfunction TimetableFormsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelementStart(3, \"select\", 6, 7);\n    i0.ɵɵlistener(\"change\", function TimetableFormsComponent_div_0_Template_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n\n      const _r5 = i0.ɵɵreference(4);\n\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.viewDaysOptionChanged(_r5.value);\n    });\n    i0.ɵɵelementStart(5, \"option\", 8);\n    i0.ɵɵtext(6, \"Today\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 8);\n    i0.ɵɵtext(8, \"Three Days\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 8);\n    i0.ɵɵtext(10, \"Week\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 9);\n    i0.ɵɵelementStart(12, \"div\", 10);\n    i0.ɵɵelementStart(13, \"div\", 11);\n    i0.ɵɵelementStart(14, \"div\", 12);\n    i0.ɵɵelementStart(15, \"button\", 13);\n    i0.ɵɵlistener(\"viewDateChange\", function TimetableFormsComponent_div_0_Template_button_viewDateChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.viewDate = $event;\n    })(\"viewDateChange\", function TimetableFormsComponent_div_0_Template_button_viewDateChange_15_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.dateOrViewChanged();\n    });\n    i0.ɵɵelementStart(16, \"span\", 14);\n    i0.ɵɵelementStart(17, \"i\", 15);\n    i0.ɵɵtext(18, \"Previous\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 16);\n    i0.ɵɵlistener(\"viewDateChange\", function TimetableFormsComponent_div_0_Template_button_viewDateChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.viewDate = $event;\n    })(\"viewDateChange\", function TimetableFormsComponent_div_0_Template_button_viewDateChange_19_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.dateOrViewChanged();\n    });\n    i0.ɵɵelementStart(20, \"span\", 14);\n    i0.ɵɵelementStart(21, \"i\", 17);\n    i0.ɵɵtext(22, \"today\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 18);\n    i0.ɵɵlistener(\"viewDateChange\", function TimetableFormsComponent_div_0_Template_button_viewDateChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.viewDate = $event;\n    })(\"viewDateChange\", function TimetableFormsComponent_div_0_Template_button_viewDateChange_23_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.dateOrViewChanged();\n    });\n    i0.ɵɵelementStart(24, \"span\", 14);\n    i0.ɵɵelementStart(25, \"i\", 19);\n    i0.ɵɵtext(26, \"Next\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"br\");\n    i0.ɵɵelementStart(28, \"div\", 20);\n    i0.ɵɵtemplate(29, TimetableFormsComponent_div_0_calendar_scheduler_view_29_Template, 1, 19, \"calendar-scheduler-view\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.viewDays);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", 7);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"view\", ctx_r0.view)(\"viewDate\", ctx_r0.viewDate)(\"daysInWeek\", ctx_r0.viewDays)(\"excludeDays\", ctx_r0.excludeDays)(\"disabled\", ctx_r0.prevBtnDisabled);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"viewDate\", ctx_r0.viewDate);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"view\", ctx_r0.view)(\"viewDate\", ctx_r0.viewDate)(\"daysInWeek\", ctx_r0.viewDays)(\"excludeDays\", ctx_r0.excludeDays)(\"disabled\", ctx_r0.nextBtnDisabled);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.view);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.CalendarView.Week);\n  }\n}\n\nfunction TimetableFormsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"h4\", 24);\n    i0.ɵɵtext(2, \"Change date of Service\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TimetableFormsComponent_ng_template_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const d_r23 = restoredCtx.dismiss;\n      return d_r23(\"Cross click\");\n    });\n    i0.ɵɵelementStart(4, \"span\", 26);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 27);\n    i0.ɵɵelementStart(7, \"div\", 28);\n    i0.ɵɵelementStart(8, \"div\", 29);\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"label\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"form\", 30);\n    i0.ɵɵelementStart(15, \"label\", 31);\n    i0.ɵɵtext(16, \"Change date of service start\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵelementStart(18, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function TimetableFormsComponent_ng_template_1_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.serviceTime = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 33);\n    i0.ɵɵelementStart(20, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TimetableFormsComponent_ng_template_1_Template_button_click_20_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.SaveChanges($event);\n    });\n    i0.ɵɵtext(21, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"Client name \", ctx_r2.serviceClientName, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Client Phone \", ctx_r2.serviceClientPhone, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.serviceTime);\n  }\n}\n\nfunction TimetableFormsComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"h4\", 24);\n    i0.ɵɵtext(2, \"Plan the service\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function TimetableFormsComponent_ng_template_3_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const d_r29 = restoredCtx.dismiss;\n      return d_r29(\"Cross click\");\n    });\n    i0.ɵɵelementStart(4, \"span\", 26);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 27);\n    i0.ɵɵelementStart(7, \"div\", 36);\n    i0.ɵɵelementStart(8, \"form\", 30);\n    i0.ɵɵelementStart(9, \"div\", 29);\n    i0.ɵɵelementStart(10, \"label\", 37);\n    i0.ɵɵtext(11, \"Service name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function TimetableFormsComponent_ng_template_3_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.ServiceName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 29);\n    i0.ɵɵelementStart(14, \"label\", 39);\n    i0.ɵɵtext(15, \"Service price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 40);\n    i0.ɵɵlistener(\"ngModelChange\", function TimetableFormsComponent_ng_template_3_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.ServicePrice = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 29);\n    i0.ɵɵelementStart(18, \"label\", 41);\n    i0.ɵɵtext(19, \"Service duration\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"select\", 42);\n    i0.ɵɵlistener(\"ngModelChange\", function TimetableFormsComponent_ng_template_3_Template_select_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.serviceDuration = $event;\n    });\n    i0.ɵɵelementStart(21, \"option\");\n    i0.ɵɵtext(22, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"option\");\n    i0.ɵɵtext(24, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"option\");\n    i0.ɵɵtext(26, \"3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"option\");\n    i0.ɵɵtext(28, \"4\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"option\");\n    i0.ɵɵtext(30, \"5\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"option\");\n    i0.ɵɵtext(32, \"6\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"option\");\n    i0.ɵɵtext(34, \"7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"option\");\n    i0.ɵɵtext(36, \"8\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"option\");\n    i0.ɵɵtext(38, \"9\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"option\");\n    i0.ɵɵtext(40, \"10\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 29);\n    i0.ɵɵelementStart(42, \"label\", 43);\n    i0.ɵɵtext(43, \"Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"textarea\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function TimetableFormsComponent_ng_template_3_Template_textarea_ngModelChange_44_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return ctx_r35.DescriptionArea = $event;\n    });\n    i0.ɵɵtext(45, \"                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"div\", 33);\n    i0.ɵɵelementStart(47, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TimetableFormsComponent_ng_template_3_Template_button_click_47_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.addOrderByProvider($event);\n    });\n    i0.ɵɵtext(48, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.ServiceName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.ServicePrice);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.serviceDuration);\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.DescriptionArea);\n  }\n}\n\nexport let TimetableFormsComponent = /*#__PURE__*/(() => {\n  class TimetableFormsComponent {\n    constructor(locale, store, Userstore, service, appService, dateAdapter, modalService) {\n      this.store = store;\n      this.Userstore = Userstore;\n      this.service = service;\n      this.appService = appService;\n      this.dateAdapter = dateAdapter;\n      this.modalService = modalService;\n      this.title = 'Angular Calendar Scheduler Demo';\n      this.CalendarView = CalendarView;\n      this.view = CalendarView.Week;\n      this.viewDate = new Date();\n      this.viewDays = 3;\n      this.refresh = new Subject();\n      this.locale = 'en';\n      this.hourSegments = 4;\n      this.weekStartsOn = 1;\n      this.startsWithToday = true;\n      this.activeDayIsOpen = true;\n      this.excludeDays = []; // [0];\n\n      this.dayStartHour = 6;\n      this.dayEndHour = 22;\n      this.minDate = new Date();\n      this.maxDate = endOfDay(addMonths(new Date(), 1));\n      this.prevBtnDisabled = false;\n      this.nextBtnDisabled = false;\n      this.actions = [{\n        when: 'enabled',\n        label: '<span class=\"valign-center\"><i class=\"material-icons md-18 md-red-500\">cancel</i></span>',\n        title: 'Delete',\n        onClick: event => {\n          console.log('Pressed action \\'Delete\\' on event ' + event.id);\n          var deleting = this.service.deleteOrder(event.id);\n          deleting.subscribe(res => {\n            console.log(res.message);\n          });\n          deleting.toPromise().then(x => new Promise(resolve => setTimeout(() => resolve(this.appService.getEvents(this.actions).then(events => this.events = events)), 1)));\n        }\n      }, {\n        when: 'cancelled',\n        label: '<span class=\"valign-center\"><i class=\"material-icons md-18 md-red-500\">autorenew</i></span>',\n        title: 'Restore',\n        onClick: event => {\n          console.log('Pressed action \\'Restore\\' on event ' + event.id);\n        }\n      }];\n      this.UTCoffset = +2; //this.store.dispatch(new CartActions.resetCart())\n\n      this.freeTerms = [];\n      this.locale = locale;\n      this.cart$ = this.store.select('cart');\n      this.user$ = this.Userstore.select('user');\n      var providerID = '';\n      this.cart$.subscribe(r => providerID = r.provider);\n      var isProvider = false;\n      this.user$.subscribe(u => isProvider = u.isProvider);\n      var cartItems = [];\n      this.cart$.subscribe(r => cartItems = r.cartItems);\n      var servDuration = 0;\n\n      if (cartItems.length > 0) {\n        servDuration = cartItems.map(o => o.duration).reduce((a, c) => a + c);\n      }\n\n      if (isProvider == false) {\n        this.service.getFreeTerms(providerID, servDuration).subscribe(res => {\n          console.log('Loading free terms for user');\n          console.log(res.message);\n          this.freeTerms = res.data.freeTermsBetween;\n          console.log(this.freeTerms);\n\n          this.segmentModifier = (segment => {\n            segment.isDisabled = !this.isDateForSegmentValid(segment.date, this.freeTerms);\n          }).bind(this);\n\n          console.log('Loading free terms for user complete');\n\n          this.eventModifier = (event => {\n            event.isDisabled = !this.isDateValid(event.start);\n          }).bind(this); //this.dateOrViewChanged();\n\n\n          this.changeDate(new Date());\n        });\n      } else {\n        this.eventModifier = (event => {\n          event.isDisabled = !this.isDateValid(event.start);\n        }).bind(this);\n\n        this.changeDate(new Date());\n      } // this.dayModifier = ((day: SchedulerViewDay): void => {\n      //     day.cssClass = this.isDateValid(day.date) ? '' : 'cal-disabled';\n      // }).bind(this);\n      // this.hourModifier = ((hour: SchedulerViewHour): void => {\n      //     hour.cssClass = this.isDateValid(hour.date) ? '' : 'cal-disabled';\n      // }).bind(this);\n      // this.segmentModifier = ((segment: SchedulerViewHourSegment): void => {\n      //     segment.isDisabled = !this.isDateValid(segment.date);\n      // }).bind(this);\n\n    }\n\n    ngOnInit() {\n      this.appService.getEvents(this.actions).then(events => this.events = events);\n    }\n\n    refreshScheduler() {\n      this.calendarScheduler.setViewDays('Today');\n    }\n\n    viewDaysOptionChanged(viewDays) {\n      console.log('viewDaysOptionChanged', viewDays);\n      this.calendarScheduler.setViewDays(viewDays);\n    }\n\n    changeDate(date) {\n      console.log('changeDate', date);\n      this.viewDate = date;\n      this.dateOrViewChanged();\n    }\n\n    changeView(view) {\n      console.log('changeView', view);\n      this.view = view;\n      this.dateOrViewChanged();\n    }\n\n    dateOrViewChanged() {\n      if (this.startsWithToday) {\n        this.prevBtnDisabled = !this.isDateValid(subPeriod(this.dateAdapter, CalendarView.Day\n        /*this.view*/\n        , this.viewDate, 1));\n        this.nextBtnDisabled = !this.isDateValid(addPeriod(this.dateAdapter, CalendarView.Day\n        /*this.view*/\n        , this.viewDate, 1));\n      } else {\n        this.prevBtnDisabled = !this.isDateValid(endOfPeriod(this.dateAdapter, CalendarView.Day\n        /*this.view*/\n        , subPeriod(this.dateAdapter, CalendarView.Day\n        /*this.view*/\n        , this.viewDate, 1)));\n        this.nextBtnDisabled = !this.isDateValid(startOfPeriod(this.dateAdapter, CalendarView.Day\n        /*this.view*/\n        , addPeriod(this.dateAdapter, CalendarView.Day\n        /*this.view*/\n        , this.viewDate, 1)));\n      }\n\n      if (this.viewDate < this.minDate) {\n        this.changeDate(this.minDate);\n      } else if (this.viewDate > this.maxDate) {\n        this.changeDate(this.maxDate);\n      }\n    }\n\n    isDateValid(date) {\n      return (\n        /*isToday(date) ||*/\n        date >= this.minDate && date <= this.maxDate\n      ); ///tutaj ogarnac dostepne day\n    }\n\n    isDateForSegmentValid(date, freeTerms) {\n      if (date <= this.minDate) return false;\n      var result = false;\n      let formattedDate = moment(date).format('YYYY-MM-DD HH:mm:ss');\n      let fDate = new Date(formattedDate);\n\n      for (let term of freeTerms) {\n        let freeTermStart = moment(term.freeTermStart).format('YYYY-MM-DD HH:mm:ss');\n        let tsDate = new Date(freeTermStart);\n        console.log('Start odczytu wolnych terminow ' + fDate + ' porownanie do ' + tsDate);\n\n        if (date > tsDate) {\n          console.log('Znaleziono wolny termin');\n          let freeTermEnd = moment(term.freeTermEnd).format('YYYY-MM-DD HH:mm:ss');\n          let teDate = new Date(freeTermEnd);\n\n          if (date < teDate) {\n            result = true;\n            break;\n          }\n        }\n\n        result = false;\n      }\n\n      ;\n      return result;\n    }\n\n    SaveChanges(e) {\n      if (confirm(\"Are you sure move this order?\")) {\n        console.log(this.serviceTime);\n        let tempDate = new Date(this.serviceTime);\n        let strDate = moment(tempDate).format('YYYY-MM-DD HH:mm:ss');\n        var moveOrder = this.service.moveOrder(this.serviceIdToMove, strDate);\n        moveOrder.subscribe(res => {\n          console.log(res.message);\n\n          if (res.success == true) {\n            this.moveOrderResp = res.data;\n            var sendSms = this.service.sendSms(this.moveOrderResp.clientName, 'Your service in: ' + this.moveOrderResp.provName + ' ' + 'was moved to a new date: ' + strDate);\n            sendSms.subscribe(resp => {\n              console.log(resp.message);\n            }, err => {\n              console.log(err);\n            });\n          }\n        }, err => {\n          console.log(err);\n        });\n        ;\n        document.getElementById(\"CloseCalendar\").click();\n        moveOrder.toPromise().then(x => new Promise(resolve => setTimeout(() => resolve(this.appService.getEvents(this.actions).then(events => this.events = events)), 1)));\n      }\n    }\n\n    viewDaysChanged(viewDays) {\n      console.log('viewDaysChanged', viewDays);\n      this.viewDays = viewDays;\n    }\n\n    dayHeaderClicked(day) {\n      console.log('dayHeaderClicked Day', day);\n    }\n\n    hourClicked(hour) {\n      console.log('hourClicked Hour', hour);\n    }\n\n    segmentClicked(action, segment) {\n      if (confirm(\"Are you sure want to add new order?\")) {\n        console.log(\"Hello segment!!!\");\n        var isProvider = false;\n        this.user$.subscribe(u => isProvider = u.isProvider);\n        var durationSum = 0;\n        this.serviceTime = segment.date;\n\n        if (isProvider == false) {\n          var providerId = '';\n          this.cart$ = this.store.select('cart');\n          this.cart$.subscribe(r => providerId = r.provider);\n          var items = [];\n          this.cart$.subscribe(r => items = r.cartItems);\n\n          for (let item of items) {\n            //todo:pobierac czas z item po dodaniu\n            let formattedDate = moment(segment.date).format('YYYY-MM-DD HH:mm:ss');\n            let startDate = new Date(formattedDate);\n            let tempStartDate = new Date(formattedDate);\n            tempStartDate.setHours(startDate.getHours() + durationSum + this.UTCoffset);\n            let endDate = new Date(formattedDate);\n            endDate.setHours(startDate.getHours() + durationSum + item.duration + this.UTCoffset);\n            let order = new Order();\n            order.providerId = providerId;\n            order.startDate = tempStartDate;\n            order.endDate = endDate;\n            order.serviceId = item.cartItem;\n            this.service.putOrder(order).subscribe(res => {\n              console.log('Service succesfully added');\n              console.log(res.message);\n            });\n            durationSum += item.duration;\n          }\n\n          this.store.dispatch(new CartActions.resetCart());\n          document.getElementById(\"closeModalButton2\").click();\n          document.getElementById(\"closeModalButton1\").click();\n          this.cart$ = this.store.select('cart');\n          var cartItems = [];\n          this.cart$.subscribe(r => cartItems = r.cartItems);\n          console.log('zawartosc koszyka powinna byc pusta');\n          console.log(cartItems); // console.log('zdarzenie zacznie sie:'+ segment.date);\n          // console.log('segmentClicked Action', action);\n          // console.log('segmentClicked Segment', segment);\n        } else {\n          this.modalService.open(this.NewService);\n        }\n      }\n    }\n\n    addOrderByProvider(e) {\n      if (confirm(\"Are you sure want to add new order?\")) {\n        var providerID = '';\n        this.user$.subscribe(r => providerID = r.providerID);\n        console.log('provider is:' + providerID);\n        let formattedDate = moment(this.serviceTime).format('YYYY-MM-DD HH:mm:ss');\n        let startDate = new Date(formattedDate);\n        let tempStartDate = new Date(formattedDate);\n        tempStartDate.setHours(startDate.getHours() + this.UTCoffset);\n        let endDate = new Date(formattedDate);\n        let offset = +this.serviceDuration + +this.UTCoffset;\n        endDate.setHours(startDate.getHours() + offset);\n        let order = new Order();\n        order.providerId = providerID;\n        order.duration = this.serviceDuration, order.price = this.ServicePrice, order.providerComment = this.ServiceComment, order.serviceName = this.ServiceName, order.startDate = tempStartDate;\n        order.endDate = endDate;\n        order.serviceId = '00000000-0000-0000-0000-000000000000';\n        var putOrder = this.service.putOrder(order);\n        this.ServiceName = '';\n        this.serviceDuration = 0;\n        this.ServicePrice = 0;\n        this.ServiceComment = '';\n        document.getElementById('ServiceModalButton1').click();\n        console.log('Service succesfully added');\n        putOrder.toPromise().then(x => new Promise(resolve => setTimeout(() => resolve(this.appService.getEvents(this.actions).then(events => this.events = events)), 1)));\n      }\n    }\n\n    eventClicked(action, event) {\n      console.log('eventClicked Action', action);\n      console.log('eventClicked Event', event);\n      this.service.GetClientData(event.id).subscribe(res => {\n        this.serviceClientName = res.data.clientName;\n        this.serviceClientPhone = res.data.clientPhone;\n      });\n      this.modalService.open(this.MoveService);\n      this.serviceIdToMove = event.id;\n    }\n\n    eventTimesChanged({\n      event,\n      newStart,\n      newEnd,\n      type\n    }) {\n      console.log('eventTimesChanged Type', type);\n      console.log('eventTimesChanged Event', event);\n      console.log('eventTimesChanged New Times', newStart, newEnd);\n      const ev = this.events.find(e => e.id === event.id);\n      ev.start = newStart;\n      ev.end = newEnd;\n      this.refresh.next();\n    }\n\n  }\n\n  TimetableFormsComponent.ɵfac = function TimetableFormsComponent_Factory(t) {\n    return new (t || TimetableFormsComponent)(i0.ɵɵdirectiveInject(LOCALE_ID), i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.OrdersService), i0.ɵɵdirectiveInject(i3.AppService), i0.ɵɵdirectiveInject(i4.DateAdapter), i0.ɵɵdirectiveInject(i5.NgbModal));\n  };\n\n  TimetableFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimetableFormsComponent,\n    selectors: [[\"app-timetable-forms\"]],\n    viewQuery: function TimetableFormsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(CalendarSchedulerViewComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.MoveService = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.NewService = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendarScheduler = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CalendarDateFormatter,\n      useClass: SchedulerDateFormatter\n    }])],\n    decls: 5,\n    vars: 1,\n    consts: [[\"class\", \"calendar-container\", 4, \"ngIf\"], [\"MoveService\", \"\"], [\"NewService\", \"\"], [1, \"calendar-container\"], [1, \"row\", \"mt-4\", \"p-3\", \"d-flex\", \"justify-content-center\"], [1, \"col-md-6\", \"text-center\", \"pl-2\", \"ml-2\"], [1, \"form-control\", 3, \"ngModel\", \"change\"], [\"viewDayOptionSelect1\", \"\"], [3, \"value\"], [1, \"col-md-6\", \"text-right\"], [1, \"row\"], [1, \"col-6\", \"col-md-12\"], [\"role\", \"group\", 1, \"btn-group\"], [\"type\", \"button\", \"mwlCalendarPreviousView\", \"\", 1, \"btn\", \"btn-outline-dark\", 3, \"view\", \"viewDate\", \"daysInWeek\", \"excludeDays\", \"disabled\", \"viewDateChange\"], [1, \"valign-center\"], [\"title\", \"Precedente\", 1, \"material-icons\", \"md-18\"], [\"type\", \"button\", \"name\", \"TodayButton\", \"mwlCalendarToday\", \"\", 1, \"btn\", \"btn-outline-dark\", 3, \"viewDate\", \"viewDateChange\"], [\"title\", \"Oggi\", 1, \"material-icons\", \"md-18\"], [\"type\", \"button\", \"mwlCalendarNextView\", \"\", 1, \"btn\", \"btn-outline-dark\", 3, \"view\", \"viewDate\", \"daysInWeek\", \"excludeDays\", \"disabled\", \"viewDateChange\"], [\"title\", \"Successivo\", 1, \"material-icons\", \"md-18\"], [3, \"ngSwitch\"], [3, \"viewDays\", \"viewDate\", \"events\", \"locale\", \"responsive\", \"weekStartsOn\", \"excludeDays\", \"startsWithToday\", \"hourSegments\", \"dayStartHour\", \"dayEndHour\", \"dayModifier\", \"hourModifier\", \"segmentModifier\", \"eventModifier\", \"showEventActions\", \"showSegmentHour\", \"zoomEventOnHover\", \"refresh\", \"viewDaysChanged\", \"dayHeaderClicked\", \"hourClicked\", \"segmentClicked\", \"eventClicked\", \"eventTimesChanged\", 4, \"ngSwitchCase\"], [3, \"viewDays\", \"viewDate\", \"events\", \"locale\", \"responsive\", \"weekStartsOn\", \"excludeDays\", \"startsWithToday\", \"hourSegments\", \"dayStartHour\", \"dayEndHour\", \"dayModifier\", \"hourModifier\", \"segmentModifier\", \"eventModifier\", \"showEventActions\", \"showSegmentHour\", \"zoomEventOnHover\", \"refresh\", \"viewDaysChanged\", \"dayHeaderClicked\", \"hourClicked\", \"segmentClicked\", \"eventClicked\", \"eventTimesChanged\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"id\", \"CloseCalendar\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"container\"], [1, \"form-group\"], [\"action\", \"/action_page.php\"], [\"for\", \"ServiceTime\"], [\"type\", \"datetime-local\", \"id\", \"ServiceTime\", \"name\", \"ServiceTime\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"], [\"type\", \"button\", \"id\", \"ServiceModalButton1\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [1, \"col-md-12\", \"border-right\"], [\"for\", \"ServiceName\"], [\"type\", \"text\", \"id\", \"ServiceName\", \"rows\", \"3\", \"name\", \"ServiceName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"ServicePrice\"], [\"type\", \"number\", \"id\", \"ServicePrice\", \"rows\", \"3\", \"name\", \"ServicePrice\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"ServiceDuration\"], [\"id\", \"ServiceDuration\", \"name\", \"ServiceDuration\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"DescriptionArea\"], [\"id\", \"DescriptionArea\", \"rows\", \"3\", \"name\", \"DescriptionArea\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function TimetableFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TimetableFormsComponent_div_0_Template, 30, 17, \"div\", 0);\n        i0.ɵɵtemplate(1, TimetableFormsComponent_ng_template_1_Template, 22, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(3, TimetableFormsComponent_ng_template_3_Template, 49, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.events);\n      }\n    },\n    directives: [i6.NgIf, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgModel, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i4.ɵCalendarPreviousViewDirective, i4.ɵCalendarTodayDirective, i4.ɵCalendarNextViewDirective, i6.NgSwitch, i6.NgSwitchCase, i8.CalendarSchedulerViewComponent, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm, i7.DefaultValueAccessor, i7.NumberValueAccessor],\n    styles: [\".calendar-container[_ngcontent-%COMP%]{border:1px solid transparent;border-color:#fff #ddd}\"]\n  });\n  return TimetableFormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}