{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/orders.service\";\nimport * as i2 from \"@ngrx/store\";\nexport let AppService = /*#__PURE__*/(() => {\n  class AppService {\n    constructor(service, store, Userstore) {\n      this.service = service;\n      this.store = store;\n      this.Userstore = Userstore;\n      this.events = [];\n      this.cart$ = this.store.select('cart');\n      this.user$ = this.Userstore.select('user');\n    }\n\n    getEvents(actions) {\n      //this.store.dispatch(new CartActions.resetCart())\n      this.events = [];\n      var providerID = '';\n      var duration = 0;\n      this.user$.subscribe(r => providerID = r.providerID);\n      this.cart$.subscribe(r => duration = r.cartItems.reduce((s, c) => s + c.duration, 0));\n      var isProvider = false;\n      this.user$.subscribe(u => isProvider = u.isProvider);\n\n      if (isProvider == true) {\n        var test = this.service.getProviderOrders(providerID);\n        test.subscribe(res => {\n          console.log('Loading Orders for provider');\n          console.log(res.message);\n          this.orders = res.data;\n\n          for (var order of this.orders) {\n            this.events.push({\n              id: order.id,\n              start: new Date(order.start),\n              end: new Date(order.end),\n              title: order.title,\n              actions: actions,\n              isClickable: true\n            });\n          }\n\n          console.log('Wczytano: ' + this.orders.length);\n        });\n        return test.toPromise().then(x => new Promise(resolve => setTimeout(() => resolve(this.events), 1)));\n      } // else{\n      //     this.service.getFreeTerms(providerID,duration)\n      //     .subscribe(\n      //         res=>\n      //             {\n      //                 console.log('Loading free terms for user');\n      //                 console.log((<any>res).message)\n      //                 this.freeTerms = (<any>res).data.freeTermsBetween;\n      //                 for (var order of this.freeTerms){\n      //                     this.events.push(<CalendarSchedulerEvent>{\n      //                         start: new Date(order.freeTermStart),\n      //                         end:  new Date(order.freeTermEnd),\n      //                         actions:actions,\n      //                         isClickable: true,\n      //                         color: { primary: '#669900', secondary: '#669911' },\n      //                     });\n      //                 }\n      //                 const currentDate = new Date();\n      //                 currentDate.setMonth(currentDate.getMonth()+1)\n      //                 currentDate.toISOString().slice(0,10);\n      //                 this.events.push(<CalendarSchedulerEvent>{\n      //                     start: new Date((<any>res).data.freeTermFrom),\n      //                     end:  new Date(currentDate.toISOString().slice(0,10)),\n      //                     actions:actions,\n      //                     isClickable: true,\n      //                     color: { primary: '#669900', secondary: '#669911' },\n      //                 });\n      //             });\n      // }\n\n\n      return new Promise(resolve => setTimeout(() => resolve(this.events), 1));\n    }\n\n  }\n\n  AppService.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.OrdersService), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i2.Store));\n  };\n\n  AppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac\n  });\n  return AppService;\n})();","map":null,"metadata":{},"sourceType":"module"}